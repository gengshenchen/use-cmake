if( CMAKE_SIZEOF_VOID_P EQUAL 8 )
    MESSAGE( "64 bits compiler detected" )
SET( EX_PLATFORM 64 )
    SET( EX_PLATFORM_NAME "x64" )
else( CMAKE_SIZEOF_VOID_P EQUAL 8 )
    MESSAGE( "32 bits compiler detected" )
SET( EX_PLATFORM 32 )
    SET( EX_PLATFORM_NAME "x86" )
endif( CMAKE_SIZEOF_VOID_P EQUAL 8 )

    ...

IF( EX_PLATFORM EQUAL 64 )
    MESSAGE( "Outputting to lib64 and bin64" )

# ---------- Setup output Directories -------------------------
    SET (CMAKE_LIBRARY_OUTPUT_DIRECTORY
            ${YourSoftwarePath}/lib64
            CACHE PATH
            "Single Directory for all Libraries"
        )

# --------- Setup the Executable output Directory -------------
    SET (CMAKE_RUNTIME_OUTPUT_DIRECTORY
            ${YourSoftwarePath}/bin64
            CACHE PATH
            "Single Directory for all Executables."
        )

# --------- Setup the Executable output Directory -------------
    SET (CMAKE_ARCHIVE_OUTPUT_DIRECTORY
            ${YourSoftwarePath}/lib64
            CACHE PATH
            "Single Directory for all static libraries."
        )
ELSE( EX_PLATFORM EQUAL 64 )
# ---------- Setup output Directories -------------------------
    SET (CMAKE_LIBRARY_OUTPUT_DIRECTORY
            ${YourSoftwarePath}/lib
            CACHE PATH
            "Single Directory for all Libraries"
        )

# --------- Setup the Executable output Directory -------------
    SET (CMAKE_RUNTIME_OUTPUT_DIRECTORY
            ${YourSoftwarePath}/bin
            CACHE PATH
            "Single Directory for all Executables."
        )

# --------- Setup the Executable output Directory -------------
    SET (CMAKE_ARCHIVE_OUTPUT_DIRECTORY
            ${YourSoftwarePath}/lib
            CACHE PATH
            "Single Directory for all static libraries."
        )
ENDIF( EX_PLATFORM EQUAL 64 )

    ...


    add_library(YourSoftware SHARED
            ${INCLUDES}
            ${SRC}
            )
